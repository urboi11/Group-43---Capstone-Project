name: Training Model

on:
  workflow_dispatch:
    inputs:
      pythonScriptVersion:
        description: "For Step 1... What python script do you want?"
        required: true
        type: choice
        options:
          - generate_synthetic_pii_v2.py
          - generate_synthetic_pii_v3.py
      nParameter: 
        description: "For Step 1... What --n number do you want?"
        required: true
        type: number
      seedParameter: 
        description: "For Step 1... What --seed number do you want?"
        required: true
        type: number
      difficulty:
        description: "Do you want Harder or Ultra-hard?"
        required: true
        type: choice
        options:
          - none
          - Harder
          - Ultra-hard
      # confusables:
      #   description: "How much confusables do you want?"
      #   required: false
      #   type: number
      # model: 
      #   description: "Step 2 ... What model do you want?"
      #   required: true
      #   default: distilbert-base-uncased
      #   type: string
      # epochs:
      #   description: "Step 3.. How many epochs do you want?"
      #   required: true
      #   default: 5
      #   type: number
      # batch_size:
      #   description: "Step 3.. How big is the batch size?"
      #   required: true
      #   type: number
      # lr:
      #   description: "Step 3... What is the lr?"
      #   required: true
      #   default: "5e-5"
      #   type: string
      # opset:
      #   description: "Step 4 .. What is your opset?"
      #   required: true
      #   type: number




jobs:
    training:
      runs-on: windows-latest
      steps:
      - uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.9"

      - name: Set up Virtual Environment
        run: |
          dir
          pip install -r requirements.txt
      
      - name: Step 1 - Generate Synthetic Data
        if: ${{ inputs.difficulty == 'none' && inputs.pythonScriptVersion == 'generate_synthetic_pii_v2.py' || inputs.pythonScriptVersion == 'generate_synthetic_pii_v3.py'}}
        run: python .\scripts\${{ inputs.pythonScriptVersion }} --out .\pii-lab\data --n ${{ inputs.nParameter }} --seed ${{ inputs.seedParameter }}

      - name: Step 1.2 - Generate Synthetic Data
        if: "${{ inputs.difficulty == 'Harder' && inputs.pythonScriptVersion == 'generate_synthetic_pii_v3.py'}}"
        run: python .\scripts\${{ inputs.pythonScriptVersion }} --out .\pii-lab\data --n ${{ inputs.nParameter }} --seed ${{ inputs.seedParameter }} --disjoint-formats

      # - name: Step 1.3 - Generate Synthetic Data
      #   if: "${{ inputs.difficulty == 'Ultra-hard' && inputs.difficulty == 'generate_synthetic_pii_v3.py'}}"
      #   run: python .\scripts\${{ inputs.pythonScriptVersion }} --out .\pii-lab\data --n ${{ inputs.nParameter }} --seed ${{ inputs.seedParameter }} --confusables ${{ inputs.confusables }} --extra-noise

      # - name: Step 2 - Prepare Dataset
      #   run: python .\scripts\prepare_dataset.py --model ${{ inputs.model }}

      # - name: Step 3 - Train Model
      #   run: python .\scripts\train_ner.py --epochs ${{ inputs.epochs }} --bsz ${{ inputs.batch_size }} --lr ${{ inputs.lr }}

      # - name: Step 3.1 - Train Model
      #   run: python .\scripts\train_ner.py --base_model .\experiments\baseline\model\checkpoint-1000 --data_dir .\experiments\baseline\data --out_dir .\experiments\baseline\model --epochs ${{inputs.epochs}} --bsz ${{ inputs.lr }}

      # - name: Step 3.2 - Train model
      #   run: python .\scripts\train_ner.py --base_model .\experiments\baseline\model\checkpoint-1500 --data_dir .\experiments\baseline\data --out_dir .\experiments\baseline\model --epochs ${{inputs.epochs}} --bsz ${{ inputs.lr }}
        
      # - name: Step 4 - Evaluate Results
      #   run: python .\scripts\evaluate_ner.py --per_label

      # - name: Step 5 - Export To ONNX
      #   run: optimum-cli export onnx --model ".\experiments\baseline\model\final-model" --task token-classification --opset ${{inputs.opset}} ".\" 
        
      # - name: Step 5.1 - Export To Onnx - Copy
      #   run: Copy-Item -Path ".\experiments\baseline\model\final-model\id2label.json" -Destination ".\"

          



